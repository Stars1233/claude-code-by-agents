/**
 * Streaming debug utilities for diagnosing cloud deployment issues
 */

export const STREAMING_DEBUG = import.meta.env.VITE_STREAMING_DEBUG === 'true';

export function debugStreamingPerformance(startTime: number, firstResponseTime?: number, endTime?: number) {
  if (!STREAMING_DEBUG) return;

  const now = Date.now();
  console.group('üåä Streaming Performance Debug');
  
  if (firstResponseTime) {
    console.log(`‚è±Ô∏è Time to first response: ${firstResponseTime - startTime}ms`);
  }
  
  if (endTime) {
    console.log(`‚è±Ô∏è Total request time: ${endTime - startTime}ms`);
  } else {
    console.log(`‚è±Ô∏è Current request time: ${now - startTime}ms`);
  }
  
  console.groupEnd();
}

export function debugStreamingConnection(url: string, headers: HeadersInit) {
  if (!STREAMING_DEBUG) return;

  console.group('üîó Streaming Connection Debug');
  console.log(`üì° URL: ${url}`);
  console.log(`üìã Headers:`, headers);
  console.groupEnd();
}

export function debugStreamingChunk(chunk: string, lineCount: number) {
  if (!STREAMING_DEBUG) return;

  console.group('üì¶ Streaming Chunk Debug');
  console.log(`üìè Chunk size: ${chunk.length} bytes`);
  console.log(`üìù Line count: ${lineCount}`);
  console.log(`üîç First 100 chars: ${chunk.substring(0, 100)}`);
  console.groupEnd();
}

export function debugStreamingLatency(messageType: string, timestamp: number) {
  if (!STREAMING_DEBUG) return;

  const now = Date.now();
  const latency = now - timestamp;
  
  if (latency > 1000) {
    console.warn(`‚ö†Ô∏è High latency detected for ${messageType}: ${latency}ms`);
  } else {
    console.log(`‚ö° ${messageType} latency: ${latency}ms`);
  }
}

export function warnProxyBuffering(detectionTime: number) {
  console.group('‚ö†Ô∏è Streaming Issue Detected');
  console.warn(`Proxy buffering suspected - no streaming detected within ${detectionTime}ms`);
  console.log('üí° Possible solutions:');
  console.log('  ‚Ä¢ Check NGINX/proxy configuration');
  console.log('  ‚Ä¢ Verify CDN settings');
  console.log('  ‚Ä¢ Check cloud platform streaming support');
  console.log('  ‚Ä¢ See STREAMING_DEPLOYMENT.md for details');
  console.groupEnd();
}